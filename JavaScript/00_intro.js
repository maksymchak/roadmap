0.Введение в JavaScript
	- Что такое JavaScript?

/**************************************** Test *********************************************/
1. Блок (Что такое JavaScript?)
- Какова история  JavaScript?
- Как работают движки?
- Что может JavaScript?
- Почему JavaScript популярен?
- Какие еще языки похожы?

2. Блок (Основы JavaScript)
- Зачем нужен кеш ?
- Что такое "use strict" ? 
- Что такое переменная?
- Что такое константа?

/******************************************************************************************/

/*================================= Что такое JavaScript? ===================================================*/

Изначально JavaScript был создан, чтобы «сделать веб-страницы живыми». Программы на этом языке называются скриптами.

Язык Java был очень популярен в то время, и было решено, что позиционирование JavaScript как «младшего брата» Java будет полезно.

Со временем JavaScript стал полностью независимым языком со своей собственной спецификацией, называющейся ECMAScript.

Сегодня JavaScript может выполняться не только в браузере, но и на сервере или на любом другом устройстве, которое имеет 
	специальную программу, называющуюся «движком» JavaScript. V8 – в Chrome и Opera

Как работают движки?
1. Движок (встроенный, если это браузер) читает («парсит») текст скрипта
2. Затем он преобразует («компилирует») скрипт в машинный язык
3. После этого машинный код запускается и работает достаточно быстро

В браузере для JavaScript доступно всё, что связано с манипулированием веб-страницами, взаимодействием с пользователем и веб-сервером.

Например, в браузере JavaScript может:
 - Добавлять новый HTML-код 
 - Реагировать на действия пользователя
 - Отправлять сетевые запросы
 - Получать и устанавливать куки
 - Запоминать данные на стороне клиента («local storage»).

Что делает JavaScript особенным?
 - Полная интеграция с HTML/CSS.
 - Простые вещи делаются просто.
 - Поддерживается всеми основными браузерами и включён по умолчанию.

Появилось много новых языков, которые транспилируются (конвертируются) в JavaScript, прежде чем запустятся в браузере:
 - CoffeeScript добавляет «синтаксический сахар» для JavaScript
 - TypeScript концентрируется на добавлении «строгой типизации»

/*================================= Основы JavaScript? ===================================================*/

Польза от отдельных файлов в том, что браузер загрузит скрипт отдельно и сможет хранить его в кеше. Другие страницы, 
	которые подключают тот же скрипт, смогут брать его из кеша вместо повторной загрузки из сети. И таким образом файл 
	будет загружаться с сервера только один раз. Это сокращает расход трафика и ускоряет загрузку страниц.


Строгий режим — "use strict"
Директива выглядит как строка: "use strict" или 'use strict'. Когда она находится в начале скрипта, весь сценарий 
	работает в «современном» режиме. Над "use strict" могут быть записаны только комментарии.
Директива "use strict" переключает движок в «современный» режим, изменяя поведение некоторых встроенных функций.


Переменная
Переменная – это «именованное хранилище» для данных.
	//	let message;

Теперь можно поместить в неё данные, используя оператор присваивания =:
	//	message = 'Hello'; сохранить строку

Строка сохраняется в области памяти, связанной с переменной.
Мы также можем объявить несколько переменных в одной строке:
	// let user = 'John', age = 25, message = 'Hello';

При изменении значения старые данные удаляются из переменной:
	// let message;
	// message = 'Hello!';
	// message = 'World!'; // значение изменено

Мы также можем объявить две переменные и скопировать данные из одной в другую.
	// let hello = 'Hello world!';
	// let message;
	// message = hello;
	// теперь две переменные содержат одинаковые данные
	alert(hello); // Hello world!
	alert(message); // Hello world!

Примеры неправильных имён переменных:
	// let 1a;  не может начинаться с цифры
	// let my-name;   дефис '-' не разрешён в имени

Существует список зарезервированных слов, которые нельзя использовать.
Например: let, class, return и function зарезервированы.
num = 5; // если переменная "num" раньше не существовала, она создаётся


Константы
Чтобы объявить константную, то есть, неизменяемую переменную, используйте const вместо let:
	// const myBirthday = '18.04.1982';

